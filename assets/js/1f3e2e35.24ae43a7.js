"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[9646],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),y=o,f=u["".concat(s,".").concat(y)]||u[y]||d[y]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8587:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1},a="Python Introduction",l={unversionedId:"Python-Basics/python-intro",id:"Python-Basics/python-intro",title:"Python Introduction",description:"Links",source:"@site/docs/Python-Basics/python-intro.md",sourceDirName:"Python-Basics",slug:"/Python-Basics/python-intro",permalink:"/blog/docs/Python-Basics/python-intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Python-Basics/python-intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/blog/docs/intro"},next:{title:"Python Advanced",permalink:"/blog/docs/Python-Basics/python-advanced"}},s={},c=[{value:"Important Basics",id:"important-basics",level:2},{value:"variables",id:"variables",level:3},{value:"Lists",id:"lists",level:3},{value:"Functions",id:"functions",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"python-introduction"},"Python Introduction"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Links")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Foundations of Python: ",(0,o.kt)("a",{parentName:"li",href:"https://madewithml.com/courses/foundations/python/"},"Made with ML"))),(0,o.kt)("h2",{id:"important-basics"},"Important Basics"),(0,o.kt)("h3",{id:"variables"},"variables"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# Intenegers\na = 0\n# Strings\nb = 'Hello world!'\n# float\nc = 10.05\n# boolean\nd = True\n")),(0,o.kt)("h3",{id:"lists"},"Lists"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"list = [0,1,2,3,4,5,6,7,8,9]\nlist[0]\nlist[-1]\nlist[-4:]\nlen(list)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"#Specific elements can be replaced by this way\nlist[1] = 15\n#adding elements\nlist.append(11)\n## Letters\nnew_list = ['hello','world','hi']\n## remove element in a list\nnew_list[2] = []\nlist[0:3] = []\n# clear the whole list\nlist[:] = []\n")),(0,o.kt)("h3",{id:"functions"},"Functions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"def say_hello():\n    # block belonging to the function\n    print('hello world')\n# End of function\n\nsay_hello()  # call the function\n")))}d.isMDXComponent=!0}}]);